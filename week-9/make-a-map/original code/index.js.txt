import {
  select,
  geoOrthographic,
  geoPath,
  geoGraticule,
  timer,
  scaleSequential,
  interpolateHcl,
} from 'd3';
import topojson from 'topojson-client';
import { map } from './map';

const worldAtlasURL =
  'https://unpkg.com/visionscarto-world-atlas@0.1.0/world/110m.json';

export const main = (container, { state, setState }) => {
  const width = window.innerWidth;
  const height = window.innerHeight;

  const svg = select(container)
    .selectAll('svg')
    .data([null])
    .join('svg')
    .attr('width', width)
    .attr('height', height);

  const projection = geoOrthographic()
    .scale(300)
    .translate([width / 2, height / 2])
    .rotate([0, -23.5]); // Rotate with Earth's tilt of 23.5 degrees

  const path = geoPath(projection);
  const graticule = geoGraticule();

  const sunLongitude = () => (Date.now() / 1000) % 360; // Position of the sun in relation to Earth's rotation

  const shade = scaleSequential(
    [90, -90],
    interpolateHcl('black', 'white'),
  ); // For dark/light side

  // Animate rotation and day-night shading
  timer(() => {
    projection.rotate([sunLongitude(), -23.5]);
    svg.call(map, {
      data: state.data,
      path,
      graticule,
      shade,
    });
  });

  if (state.data === undefined) {
    setState((state) => ({
      ...state,
      data: 'LOADING',
    }));
    fetch(worldAtlasURL)
      .then((response) => response.json())
      .then((topoJSONData) => {
        const data = topojson.feature(
          topoJSONData,
          'countries',
        );
        setState((state) => ({
          ...state,
          data,
        }));
      });
  }
};
